name: create_pypi_package

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build_and_publish_package:
    name: Build and publish the PyPi package
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.13

      # TODO: cache
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine bump2version

      - name: Checkout main
        uses: actions/checkout@v2

      - name: Bump package version
        run: bump2version --current-version $(cat VERSION) patch VERSION

      - name: Checkout submodules using a PAT
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.OPENDATADISCOVERY_BOT_PAT }}:${{ secrets.OPENDATADISCOVERY_BOT_PAT }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive
          git submodule foreach git pull origin main
          git checkout .gitmodules

      - name: Generate ODD contract
        run: |
          java -jar ./openapi_generator/openapi-generator-cli.jar generate \
              -i ./opendatadiscovery-specification/specification/odd_adapter.yaml \
              -g python-flask \
              -o ./build/generated \
              -t ./openapi_generator \
              --global-property=apiTests=false \
              --additional-properties=packageName=odd_contract

      - name: Assemble package's files
        run: |
          mkdir -p ./build/package/odd_contract
          cp -r ./build/generated/odd_contract ./odd_contract/__init__.py ./build/package/odd_contract/
          cp -r ./README.md ./setup.py ./build/package/

      - name: Set ODD_CONTRACT_VERSION environment variable
        run: echo "ODD_CONTRACT_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          ODD_CONTRACT_VERSION: ${{ env.ODD_CONTRACT_VERSION }}
        run: |
          cd ./build/package
          python setup.py sdist bdist_wheel
          twine upload --repository testpypi dist/*

      - name: Update repository with up-to-date submodules and version
        run: |
          git config --global user.email "opendatadiscovery-bot@provectus.com"
          git config --global user.name "OpenDataDiscovery Bot"
          if [ -n "$(git status --porcelain)" ]
          then
            git add .
            git commit -m "Bot: update submodule and VERSION"
            git push origin main
          fi
